/** * $Id: Mapping.java,v 1.5 2006/03/24 00:34:01 dacostae Exp $ * $Author: dacostae $ */package org.isistan.flabot.mapping.mappingmodel;

import org.eclipse.emf.ecore.EObject;import org.isistan.flabot.javamodel.JBehavior;import org.isistan.flabot.javamodel.JClass;import org.isistan.flabot.javamodel.JPackage;import org.isistan.flabot.mapping.builder.MappingBuilder;import org.isistan.flabot.mapping.mapper.WorkspaceMapper;import org.isistan.flabot.util.TriState;/**
 * Represents a mapping to code
 * @author $Author: dacostae $ * @model interface="true" */
public interface Mapping extends EObject {	/**	 * Returns a mapper that matches this mapping.	 * The general purpose (but not efficient) DefaultWorkspaceMapper	 * can be used.	 * @return	 */	WorkspaceMapper getWorkspaceMapper();		/**	 * Returns a builder that builds this kind of mapping	 * @return	 */	MappingBuilder getBuilder();		/**	 * Returns true if the behavior passed is mapped	 * @param jBehavior	 * @return	 */
	boolean passes(JBehavior jBehavior);		/**	 * Returns true if the class passed is mapped,	 * false if not, and undefined if behaviors should be asked.	 * 	 * It is a contract that mappings not passing a class	 * won't be asked about a behavior contained in the mapping.	 * Additionally class will be always asked prior to asking for	 * its behaviors.	 *  	 * @param jClass	 * @return	 */	TriState passes(JClass jClass);		/**	 * Returns true if the package passed is mapped,	 * false if not, and undefined if classes should be asked.	 * It is a contract that mappings not passing a package	 * won't be asked about a class contained in the mapping.	 * Additionally package will be always asked prior to asking for	 * its classes.	 *  	 * @param jPackage	 * @return	 */	TriState passes(JPackage jPackage);
}
