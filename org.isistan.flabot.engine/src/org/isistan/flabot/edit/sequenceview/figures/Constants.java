/** * $Id: Constants.java,v 1.3 2006/02/03 20:46:47 franco Exp $ * $Author: franco $ */package org.isistan.flabot.edit.sequenceview.figures;
import java.util.Vector;import org.eclipse.swt.SWT;import org.eclipse.swt.graphics.Font;import org.eclipse.swt.widgets.Display;public abstract class Constants {    public static final String DELIMITER_ENTITIES="~~~~~|||||~~~~~|||||"; //$NON-NLS-1$    public static final String DELIMITER_STATE_AND_HIDDEN_STATE="/////<<<<</////<<<<<"; //$NON-NLS-1$    public static final String DELIMITER_FIELDS="#####_____#####_____"; //$NON-NLS-1$    public static final String DELIMITER_ADDITIONAL_ATTRIBUTES=";"; //$NON-NLS-1$    public static Vector<String> decomposeStrings(String s, String delimiter) {        Vector<String> ret=new Vector<String>();        for (;;) {            int index = s.indexOf(delimiter);            if (index<0) {            	s=filterComment(s);                if (!s.equals("")) ret.add(s); //$NON-NLS-1$                return ret;            }            String tmp=s.substring(0,index);            tmp=filterComment(tmp);            if (!tmp.equals("")) ret.add(tmp); //$NON-NLS-1$            s=s.substring(index+delimiter.length(), s.length());        }    }    private static String filterComment(String s) {    	int pos1 = s.indexOf("//"); //$NON-NLS-1$		int pos2 = s.indexOf("///"); //$NON-NLS-1$    	if(pos1>=0 && (pos2 != pos1)) {    		if(pos1==0) return ""; //$NON-NLS-1$    		else return s.substring(0,pos1);    	}    	return s;    }       private static final int _fontsize = 8;        public static int getFontsize() {     	return _fontsize;     }        public static int getDistLineToText() {      return _fontsize/4;    }    public static int getDistTextToLine() {      return _fontsize/4;    }    public static int getDistTextToText() {      return _fontsize/4;    }    //SansSerif    private static final Font _font = new Font(Display.getCurrent(),"Verdana",getFontsize(),  SWT.NONE); //$NON-NLS-1$       public static Font getFont() {      return _font;    }        private static final Font _fontItalic = new Font(Display.getCurrent(), "Verdana", getFontsize(), SWT.ITALIC); //$NON-NLS-1$        public static Font getFontItalic() {      return _fontItalic;    }       public static int RESIZE_TOP = 1;    public static int RESIZE_RIGHT = 2;    public static int RESIZE_BOTTOM = 4;    public static int RESIZE_LEFT = 8;    }